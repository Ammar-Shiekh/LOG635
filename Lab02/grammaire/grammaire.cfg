
#  NOTES :
# - No accents!
# - Reads english

%start PSA

# ================================================= #
# Non terminal symbols (uppercase)
# ================================================= #

# Sequences (top of the graph)
# ------------------------------------------------- #
PSA[SEM=<app(?symptomEq, ?time)>] -> PS[SEM=?symptomEq] PP[SEM=?time]
PS[SEM=<app(?symptEquation, ?who)>] -> NP[SEM=?who] VP[SEM=?symptEquation]


# Name groups
# ------------------------------------------------- #
NP[SEM=?properName] -> nprop[SEM=?properName]

# Time identifier
NP[SEM=?number] -> num[SEM=?number] numQual

NP[SEM=?name] -> det n[SEM=?name]
NP[SEM=?name] -> n[SEM=?name]


# Verb groups
# ------------------------------------------------- #
VP[SEM=?action] -> v NP[SEM=?action]


# Phrase preposition groups
# ------------------------------------------------- #
PP[SEM=?name] -> prep NP[SEM=?name]


# ================================================= #
# Terminal symbols (Dictionnary) (lowercase)
# ================================================= #

# Proper names
# ------------------------------------------------- #
nprop[SEM=<lisa>] -> 'Lisa'
nprop[SEM=bart] -> 'Bart'
# todo ...

# Common names
# ------------------------------------------------- #
n[SEM='has-diarrhea-at'] -> 'diarrhee'
n[SEM='is-vomitting-at'] -> 'vomit'

n[SEM=<\p.\t.(hasHeadacheAt(p,t))>] -> 'mal' 'a' 'la' 'tete'

# Verbs
# ------------------------------------------------- #
v -> 'a'

# Numbers
# ------------------------------------------------- #
num[SEM=<1>] -> '1'
num[SEM=2] -> '2'
num[SEM=<3>] -> '3'
num[SEM=4] -> '4'
num[SEM=5] -> '5'


# Number qualifier
# ------------------------------------------------- #
numQual -> 'heure' | 'heures'

# Determinants
# ------------------------------------------------- #
det -> 'la'

# Prepositions
# ------------------------------------------------- #
prep -> 'a'