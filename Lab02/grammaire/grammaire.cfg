
#  NOTES :
# - No accents!
# - Reads english

%start PSA

# ================================================= #
# Non terminal symbols (uppercase)
# ================================================= #

# Sequences (top of the graph)
# ------------------------------------------------- #
PSA[SEM = <app(?s, ?t)> , SUJ = ?suj] -> PS[SEM=?s, SUJ=?suj] PP[SEM=?t]
PSA[SEM = <app(?s, ?t)> , SUJ = ?suj] -> PP[SEM=?t] ',' PS[SEM=?s, SUJ=?suj]

PS[SEM=<app(?s,?p)>, SUJ=?suj] -> NP[SEM=?p,SUJ=?suj] VP[SEM=?s]

# Name groups
# ------------------------------------------------- #
NP[SEM=?properName, SUJ=?properName] -> nprop[SEM=?properName]

# Time identifier
TSpec[SEM=?number] -> num[SEM=?number] numQual

NP[SEM=?name] -> det n[SEM=?name]
NP[SEM=?name] -> SympSpec[SEM=?name]


# Verb groups
# ------------------------------------------------- #
VP[SEM=?action] -> vAvoir SympSpec[SEM=?action]
VP[SEM=?action] -> vEtre InfSpec[SEM=?action]
VP[SEM=?action] -> vEtre LocSpec[SEM=?action]


# Phrase preposition groups
# ------------------------------------------------- #
PP[SEM=?t] -> prep TSpec[SEM=?t]
PP[SEM=?l] -> prep NP[SEM=?l]


# ================================================= #
# Terminal symbols (Dictionnary) (lowercase)
# ================================================= #

# Proper names
# ------------------------------------------------- #
nprop[SEM=<lisa>] -> 'lisa'
nprop[SEM=<bart>] -> 'bart'
nprop[SEM=<marge>] -> 'marge'
nprop[SEM=<maggie>] -> 'maggie'
nprop[SEM=<carl>] -> 'carl'
nprop[SEM=<ralph>] -> 'ralph'
nprop[SEM=<homer>] -> 'homer'
nprop[SEM=<moe>] -> 'moe'
nprop[SEM=<lenny>] -> 'lenny'
# todo ...

# Symptomes
# ------------------------------------------------- #
SympSpec[SEM=<\p.\t. (hasDiarrheaAt(p,t))>] -> 'la' 'diarrhee'
SympSpec[SEM=<\p.\t. (isVomitingAt(p,t))>] -> 'vomit'
SympSpec[SEM=<\p.\t. (hasHeadacheAt(p,t))>] -> 'mal' 'a' 'la' 'tete'
SympSpec[SEM=<\p.\t. (isDeadAt(p,t))>] -> 'mort' | 'morte'
SympSpec[SEM=<\p.\t. (isBleedingAt(p,t))>] -> 'des' 'saignements'

#Infected states
#--------------------------------------------------#
InfSpec[SEM=<\p.\t. (wasContagiousAt(p,t))>] -> 'contagieux' | 'contagieuse'

# Location
# ------------------------------------------------- #
LocSpec[SEM=<\p.\t. (isAt(maison,p,t))>] -> 'a' 'la' 'maison' | 'a' 'son' 'domicile' 
LocSpec[SEM=<\p.\t. (isAt(centrale,p,t))>] -> 'a' 'la' 'central'

# Verbs 
# ------------------------------------------------- #
vAvoir -> 'a'
vAvoir -> 'avait'
vEtre -> 'etait'
vEtre -> 'est'


# Numbers
# ------------------------------------------------- #
num[SEM=<1>] -> '1' | 'un'
num[SEM=<2>] -> '2' | 'deux'
num[SEM=<3>] -> '3' | 'trois'
num[SEM=<4>] -> '4' | 'quatre'
num[SEM=<5>] -> '5' | 'cinq'
num[SEM=<6>] -> '6' | 'six'
num[SEM=<7>] -> '7' | 'sept'
num[SEM=<8>] -> '8' | 'huit'
num[SEM=<9>] -> '9' | 'neuf'
num[SEM=<10>] -> '10' | 'dix'
num[SEM=<11>] -> '11' | 'onze'
num[SEM=<12>] -> '12' | 'douze'
num[SEM=<13>] -> '13' | 'treize'
num[SEM=<14>] -> '14' | 'quatorze'
num[SEM=<15>] -> '15' | 'quize'
num[SEM=<16>] -> '16' | 'seize'
num[SEM=<17>] -> '17' | 'dix-sept'
num[SEM=<18>] -> '18' | 'dix-huit'
num[SEM=<19>] -> '19' | 'six-neuf'
num[SEM=<20>] -> '20' | 'vingt'
num[SEM=<21>] -> '21' | 'vingt-un'



# Number qualifier
# ------------------------------------------------- #
numQual -> 'heure' | 'heures'

# Determinants
# ------------------------------------------------- #
det -> 'la' | 'le'| 'les' | 'de' | 'un' | 'une' | 'des' | 'les' | 'du' | 'au' | 'aux' | 'l' | 'c' | 'd' 


# Prepositions
# ------------------------------------------------- #
prep -> 'a' | 'chez' | 'dans' | 'de' | 'entre' | 'jusque' | 'hors' | 'par' | 'pour' | 'sans' | 'vers'
