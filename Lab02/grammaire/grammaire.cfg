
#  NOTES :
# - No accents!
# - Reads english

%start PSA

# ================================================= #
# Non terminal symbols (uppercase)
# ================================================= #

# Sequences (top of the graph)
# ------------------------------------------------- #
PSA[SEM = <app(?s, ?t)>] -> PS[SEM=?s] PP[SEM=?t]
PSA[SEM = <app(?s, ?t)>] -> PP[SEM=?t] ',' PS[SEM=?s]

PS[SEM=<app(?s,?p)>] -> NP[SEM=?p] VP[SEM=?s]

# Name groups
# ------------------------------------------------- #
NP[SEM=?properName] -> nprop[SEM=?properName]

# Time identifier
TSpec[SEM=?number] -> num[SEM=?number] numQual

NP[SEM=?name] -> det n[SEM=?name]
NP[SEM=?name] -> SympSpec[SEM=?name]


# Verb groups
# ------------------------------------------------- #
VP[SEM=?action] -> vAvoir SympSpec[SEM=?action]
VP[SEM=?action] -> vEtre InfSpec[SEM=?action]
VP[SEM=?action] -> vEtre LocSpec[SEM=?action]


# Phrase preposition groups
# ------------------------------------------------- #
PP[SEM=?t] -> prep TSpec[SEM=?t]
PP[SEM=?l] -> prep NP[SEM=?l]


# ================================================= #
# Terminal symbols (Dictionnary) (lowercase)
# ================================================= #

# Proper names
# ------------------------------------------------- #
nprop[SEM=<lisa>] -> 'Lisa'
nprop[SEM=bart] -> 'Bart'
# todo ...

# Symptomes
# ------------------------------------------------- #
SympSpec[SEM=<\p.\t. (hasDiarrheaAt(p,t))>] -> 'la''diarrhee'
SympSpec[SEM=<\p.\t. (isVomitingAt(p,t))>] -> 'vomit'
SympSpec[SEM=<\p.\t. (hasHeadacheAt(p,t))>] -> 'mal' 'a' 'la' 'tete'
SympSpec[SEM=<\p.\t. (isDeadAt(p,t))>] -> 'mort' | 'morte'
SympSpec[SEM=<\p.\t. (isBleedingAt(p,t))>] -> 'des' 'saignements'

#Infected states
#--------------------------------------------------#
InfSpec[SEM=<\p.\t. (wasContagiousAt(p,t))>] -> 'contagieux' | 'contagieuse'

# Location
# ------------------------------------------------- #
LocSpec[SEM=<\p.\t. (isAt(maison,p,t))>] -> 'a' 'la' 'maison'
LocSpec[SEM=<\p.\t. (isAt(centrale,p,t))>] -> 'a' 'la' 'central'

# Verbs 
# ------------------------------------------------- #
vAvoir -> 'a'
vAvoir -> 'avait'
vEtre -> 'etait'
vEtre -> 'est'


# Numbers
# ------------------------------------------------- #
num[SEM=<1>] -> '1'
num[SEM=<2>] -> '2'
num[SEM=<3>] -> '3'
num[SEM=<4>] -> '4'
num[SEM=<5>] -> '5'



# Number qualifier
# ------------------------------------------------- #
numQual -> 'heure' | 'heures'

# Determinants
# ------------------------------------------------- #
det -> 'la'

# Prepositions
# ------------------------------------------------- #
prep -> 'a'